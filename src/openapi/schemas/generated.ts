/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/comics": {
    get: operations["listComics"];
  };
  "/comics/{id}": {
    get: operations["fetchComic"];
  };
  "/titles": {
    get: operations["listTitles"];
  };
  "/titles/{id}": {
    get: operations["fetchTitle"];
  };
  "/publishers": {
    get: operations["listPublishers"];
  };
  "/publishers/{id}": {
    get: operations["fetchPublisher"];
  };
}

export interface components {
  schemas: {
    StructuredErrorResponse: {
      type: string;
      message: string;
    };
    Title: {
      id: number;
      name: string;
      publisher_id: number;
      url: string | null;
      issues: number | null;
      year: number | null;
      volume: number | null;
      publisher?: components["schemas"]["Publisher"];
    };
    Grade: {
      id: number;
      abbr: string;
      name: string;
      score: number;
    };
    Publisher: {
      id: number;
      name: string;
      url: string | null;
      titles?: components["schemas"]["Title"][];
    };
    Comic: {
      id: number;
      issue: number;
      description: string | null;
      date: number | null;
      grade: components["schemas"]["Grade"];
      title: components["schemas"]["Title"];
      publisher: components["schemas"]["Publisher"];
    };
    ListMeta: {
      page: number;
      pageSize: number;
      nextPage: number | null;
      previousPage: number | null;
    };
    ListResponse: {
      meta: components["schemas"]["ListMeta"];
    };
    ComicsListResponse: components["schemas"]["ListResponse"] & {
      comics: components["schemas"]["Comic"][];
    };
    TitlesListResponse: components["schemas"]["ListResponse"] & {
      titles: components["schemas"]["Title"][];
    };
    PublishersListResponse: components["schemas"]["ListResponse"] & {
      publishers: components["schemas"]["Publisher"][];
    };
  };
  parameters: {
    ID: number;
    /** page of results to fetch */
    Page: number;
    /** results page size */
    PageSize: number;
  };
}

export interface operations {
  listComics: {
    parameters: {
      query: {
        /** page of results to fetch */
        page?: components["parameters"]["Page"];
        /** results page size */
        pageSize?: components["parameters"]["PageSize"];
        /** One or more Title IDs */
        titleIds?: number[];
        /** One or more Publisher IDs */
        publisherIds?: number[];
        /** One or more Grade IDs */
        gradeIds?: number[];
      };
    };
    responses: {
      /** A list of Comics! */
      200: {
        content: {
          "application/json": components["schemas"]["ComicsListResponse"];
        };
      };
      /** Default Error */
      default: {
        content: {
          "application/json": components["schemas"]["StructuredErrorResponse"];
        };
      };
    };
  };
  fetchComic: {
    parameters: {
      path: {
        id: components["parameters"]["ID"];
      };
    };
    responses: {
      /** A Comic! */
      200: {
        content: {
          "application/json": components["schemas"]["Comic"];
        };
      };
      /** Default Error */
      default: {
        content: {
          "application/json": components["schemas"]["StructuredErrorResponse"];
        };
      };
    };
  };
  listTitles: {
    parameters: {
      query: {
        /** page of results to fetch */
        page?: components["parameters"]["Page"];
        /** results page size */
        pageSize?: components["parameters"]["PageSize"];
        publisherId?: number;
      };
    };
    responses: {
      /** A list of Titles */
      200: {
        content: {
          "application/json": components["schemas"]["TitlesListResponse"];
        };
      };
      /** Default Error */
      default: {
        content: {
          "application/json": components["schemas"]["StructuredErrorResponse"];
        };
      };
    };
  };
  fetchTitle: {
    parameters: {
      path: {
        id: components["parameters"]["ID"];
      };
    };
    responses: {
      /** A Title */
      200: {
        content: {
          "application/json": components["schemas"]["Title"];
        };
      };
      /** Default Error */
      default: {
        content: {
          "application/json": components["schemas"]["StructuredErrorResponse"];
        };
      };
    };
  };
  listPublishers: {
    parameters: {
      query: {
        /** page of results to fetch */
        page?: components["parameters"]["Page"];
        /** results page size */
        pageSize?: components["parameters"]["PageSize"];
      };
    };
    responses: {
      /** A list of Publishers */
      200: {
        content: {
          "application/json": components["schemas"]["PublishersListResponse"];
        };
      };
      /** Default Error */
      default: {
        content: {
          "application/json": components["schemas"]["StructuredErrorResponse"];
        };
      };
    };
  };
  fetchPublisher: {
    parameters: {
      path: {
        id: components["parameters"]["ID"];
      };
    };
    responses: {
      /** A Publisher */
      200: {
        content: {
          "application/json": components["schemas"]["Publisher"];
        };
      };
      /** Default Error */
      default: {
        content: {
          "application/json": components["schemas"]["StructuredErrorResponse"];
        };
      };
    };
  };
}

export interface external {}
