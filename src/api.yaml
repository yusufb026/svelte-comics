openapi: "3.0.3"
info:
  title: Comics!
  description: Comics!
  version: 1.0.0
servers: 
  - url: /v1
paths:
  /comics:
    get:
      summary: List all Comics!
      operationId: listComics
      tags:
        - comics
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
        - name: titleIds
          in: query
          description: One or more Title IDs
          required: false
          style: form
          explode: false
          allowReserved: true
          schema:
            type: array
            items:
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
        - name: publisherIds
          in: query
          description: One or more Publisher IDs
          required: false
          style: form
          explode: false
          allowReserved: true
          schema:
            type: array
            items:
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
        - name: gradeIds
          in: query
          description: One or more Grade IDs
          required: false
          style: form
          explode: false
          allowReserved: true
          schema:
            type: array
            items:
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
      responses:
        200:
          description: A list of Comics!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComicsListResponse"
        default:
          description: Default Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructuredErrorResponse"
  /comics/{id}:
    get:
      summary: Get a Comic by Id
      operationId: fetchComic
      tags:
        - comics
      parameters:
        - $ref: "#/components/parameters/ID"
      responses:
        200:
          description: A Comic!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comic"
        default:
          description: Default Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructuredErrorResponse"
  /titles:
    get:
      summary: Get a list of Titles!
      operationId: listTitles
      tags:
        - titles
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
        - name: publisherId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
      responses:
        200:
          description: A list of Titles
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TitlesListResponse"
        default:
          description: Default Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructuredErrorResponse"
  /titles/{id}:
    get:
      summary: Get a Publisher
      operationId: fetchTitle
      tags:
        - titles
      parameters:
        - $ref: "#/components/parameters/ID"
      responses:
        200:
          description: A Title
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Title"
        default:
          description: Default Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructuredErrorResponse"
  /publishers:
    get:
      summary: Get a list of Publishers!
      operationId: listPublishers
      tags:
        - publishers
      parameters:
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/PageSize"
      responses:
        200:
          description: A list of Publishers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublishersListResponse"
        default:
          description: Default Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructuredErrorResponse"
  /publishers/{id}:
    get:
      summary: Get a Publisher
      operationId: fetchPublisher
      tags:
        - publishers
      parameters:
        - $ref: "#/components/parameters/ID"
      responses:
        200:
          description: A Publisher
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
        default:
          description: Default Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StructuredErrorResponse"
components:
  parameters:
    ID:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 2147483647
    Page:
      name: page
      in: query
      description: page of results to fetch
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 10000
    PageSize:
      name: pageSize
      in: query
      description: results page size
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1
        maximum: 10000
  schemas:
    StructuredErrorResponse:
      type: object
      required:
        - type
        - message
      properties: 
        type:
          type: string
          maxLength: 2048
        message:
          type: string
          maxLength: 2048
    Title:
      type: object
      required:
        - id
        - name
        - publisher_id
        - url
        - issues
        - year
        - volume
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
        name:
          type: string
          maxLength: 1024
        publisher_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
        url:
          type: string
          format: uri
          maxLength: 2048
          nullable: true
        issues:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          nullable: true
        year:
          type: integer
          format: int32
          minimum: 1900
          maximum: 3000
          nullable: true
        volume:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          nullable: true
    Grade:
      type: object
      required:
        - id
        - abbr
        - name
        - score
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 50
        abbr:
          type: string
          maxLength: 2
          pattern: ([A-Z]{1,2})
        name:
          type: string
          maxLength: 2048
        score:
          type: number
          format: float
          minimum: 1
          maximum: 10
    Publisher:
      type: object
      required:
        - id
        - name
        - url
      properties: 
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
        name:
          type: string
          maxLength: 1024
        url:
          type: string
          format: uri
          maxLength: 2048
          nullable: true
        titles:
          type: array
          maxItems: 5000
          items:
            $ref: "#/components/schemas/Title"
    Comic:
      type: object
      required:
        - id
        - issue
        - description
        - date
        - grade
        - title
        - publisher
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
        issue:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
        description:
          type: string
          maxLength: 2048
          nullable: true
        date:
          type: integer
          format: int32
          minimum: 1900
          maximum: 3000
          nullable: true
        grade:
          $ref: "#/components/schemas/Grade"
        title:
          $ref: "#/components/schemas/Title"
        publisher:
          $ref: "#/components/schemas/Publisher"
    ListMeta:
      type: object
      required:
        - page
        - pageSize
        - nextPage
        - previousPage
      properties:
        page:
          type: integer
          format: int32
          minimum: 1
          maximum: 10000
        pageSize:
          type: integer
          format: int32
          minimum: 0
          maximum: 10000
        nextPage:
          type: integer
          format: int32
          minimum: 0
          maximum: 10000
          nullable: true
        previousPage:
          type: integer
          format: int32
          minimum: 0
          maximum: 10000
          nullable: true
    ListResponse:
      type: object
      required:
        - meta
      properties:
        meta:
          $ref: "#/components/schemas/ListMeta"
    ComicsListResponse:
      allOf:
        - $ref: "#/components/schemas/ListResponse"
        - type: object
          required:
            - comics
          properties:
            comics:
              type: array
              maxItems: 5000
              items:
                $ref: "#/components/schemas/Comic"
    TitlesListResponse:
      allOf:
        - $ref: "#/components/schemas/ListResponse"
        - type: object
          required:
            - titles
          properties:
            titles:
              type: array
              maxItems: 5000
              items:
                $ref: "#/components/schemas/Title"
    PublishersListResponse:
      allOf:
        - $ref: "#/components/schemas/ListResponse"
        - type: object
          required:
            - publishers
          properties:
            publishers:
              type: array
              maxItems: 5000
              items:
                $ref: "#/components/schemas/Publisher"
